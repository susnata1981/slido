# buildspec.yml
version: 0.2

phases:
  install:
    commands:
      - echo Logging into Amazon ECR...
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - REPOSITORY_URI=196820743359.dkr.ecr.us-west-2.amazonaws.com/slido-repository
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 7)
      - echo $COMMIT_HASH
      - echo Installing app dependencies...
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.15.10/2020-02-22/bin/linux/amd64/kubectl   
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
      - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - source ~/.bashrc
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:$COMMIT_HASH . --build-arg RAILS_MASTER_KEY=$RAILS_MASTER_KEY
      - echo Entered the pre_build phase...
      - echo Logging in to Amazon EKS...
      - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $AWS_CLUSTER_NAME
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker tag $REPOSITORY_URI:$COMMIT_HASH $REPOSITORY_URI:$COMMIT_HASH
      - docker push $REPOSITORY_URI:$COMMIT_HASH
      - echo Writing image definitions file...
      - printf '[{"name":"produciton","imageUri":"%s"}]' $REPOSITORY_URI:latest > imagedefinitions.json
      - echo Entered the build phase...
      - echo Change directory to secondary source
        #- cd $CODEBUILD_SRC_DIR
      - echo List directory
      - ls -la
      - echo Push the latest image to cluster
        #- cat deployment.yaml
        #- kubectl apply -f deployment.yaml
        #- kubectl set image deployment/slido-app $ECR_REPO_PATH:$COMMIT_HASH
      - kubectl set image deployment/slido-app slido-container=$REPOSITORY_URI:$COMMIT_HASH
artifacts:
  files: imagedefinitions.json

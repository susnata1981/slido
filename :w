import React from "react";
import { useEffect, useState } from "react";
import { Link } from "react-router-dom";
import PropTypes from "prop-types";
import { useForm } from "react-hook-form";
import { useHistory } from "react-router-dom";

import CreateEvent from "./CreateEvent";

import { Grid, Tabs, Tab } from "@material-ui/core";

export default function Home() {
  const { register, errors, handleSubmit } = useForm();

  const [eventName, setEventName] = useState("");
  const [passcode, setPasscode] = useState("");
  const [startDate, setStartDate] = useState("");
  const [events, setEvents] = useState([]);
  const [user, setUser] = useState([]);
  const [isLoading, setIsLoading] = useState(true);
  const [tabIndex, setTabIndex] = useState(2);
  const [currentEvents, setCurrentEvents] = useState([]);

  const history = useHistory();

  useEffect(() => {
    fetch("/logged_in")
      .then(response => {
        if (response.status == 401) {
          window.location.href = "/admin";
        } else {
          return response.json();
        }
      })
      .then(response => {
        setUser(response.user);
      });
  }, []);

  useEffect(() => {
    fetch("/v1/events")
      .then(response => response.json())
      .then(data => {
        setEvents(data);
        setIsLoading(false);
      });
  }, []);

  const onSubmit = data => {
    handleCreateEvent(data);
  };

  const handleTabChange = (e, newValue) => {
    if (newValue == 0) {
      let today = new Date();
      let currentEvents = events.filter(e => {
        console.log(e.start);
        Date.parse(e.startDate) >= today;
      });
      console.log(currentEvents);
      setCurrentEvents(currentEvents);
    }
    setTabIndex(newValue);
  };

  const handleCreateEvent = d => {
    const data = JSON.stringify({
      event: {
        name: d.eventName,
        passcode: d.passcode,
        start: d.startDate
      }
    });

    const formData = new FormData();
    formData.append("event[name]", d.eventName);
    formData.append("event[passcode]", d.passcode);
    formData.append("event[start]", d.startDate);
    fetch("/v1/events", {
      method: "POST",
      body: formData
    })
      .then(response => response.json())
      .then(data => console.log(data));
  };

  if (isLoading) {
    return (
      <Grid container style={{ height: "100vh" }}>
        <Grid item>
          <React.Fragment>
            <h2>Loading events...</h2>
          </React.Fragment>
        </Grid>
      </Grid>
    );
  } else {
    return (
      <React.Fragment>
        <Grid container spacing={0} alignItems="center" justify="center">
          <Grid item xs={4}>
            <Tabs
              value={tabIndex}
              indicatorColor="primary"
              textColor="primary"
              aria-label="disabled tabs example"
              onChange={handleTabChange}
            >
              <Tab label="Upcoming Events" />
              <Tab label="Past Events" />
              <Tab label="All Events" />
            </Tabs>
            <h2>All Events</h2>
            {events.map(e => {
              return (
                <h3 key={e.id}>
                  <Link key={e.id} to={`/administrator/event/${e.id}`}>
                    {e.name}
                  </Link>
                </h3>
              );
            })}
            <CreateEvent />
          </Grid>
        </Grid>
      </React.Fragment>
    );
  }
}
